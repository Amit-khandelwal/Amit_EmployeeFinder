@model PagedList.IPagedList<Silicus.Finder.Web.ViewModel.ProjectListViewModel>
@using PagedList.Mvc;
@using Silicus.Finder.Models.DataObjects;

<link href="~/Content/PagedList.css" rel="stylesheet" />

@{
    ViewBag.Title = "ProjectList";
    var message = TempData["AlertMessage"] ?? string.Empty;
}
<h2>ProjectList</h2>
<br />
<br />
<p>
    <input type="submit" value="Create Project" class="btn btn-default" onclick="@("window.location.href='" + @Url.Action("CreateProject", "Projects") + "'");" style="margin-left:890px" />
</p>

<table class="table">
    <tr>
        @{
            var count = 1;
            var employees = ViewData["Employees"] as List<Employee>;

            foreach (var name in Model)
            {
                if (count < 2)
                {
                    <th>
                        @Html.DisplayNameFor(model => name.ProjectName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => name.ProjectId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => name.ProjectType)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => name.EngagementType)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => name.Status)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => name.StartDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => name.ExpectedEndDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => name.EngagementManagerId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => name.ProjectManagerId)
                    </th>
                    <th>
                        @Html.DisplayName("Action")
                    </th>
                    <th></th>
                }
                count++;
            }
        }
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                <a href="">@Html.DisplayFor(modelItem => item.ProjectName)</a>
                ( @Html.ActionLink("Edit", "EditProject", new { id = item.ProjectId }) )

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjectId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjectType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EngagementType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExpectedEndDate)
            </td>

            <td>
                @foreach (var employee in employees.Where(e => e.EmployeeId == item.EngagementManagerId))
                {
                    @Html.Label(employee.FirstName + " " + employee.LastName)
                }
            </td>
            <td>
                @foreach (var employee in employees.Where(e => e.EmployeeId == item.ProjectManagerId))
                {
                    @Html.Label(employee.FirstName + " " + employee.LastName)
                }
            </td>
            <td>
                @{
                    if (item.Status.ToString() == "Completed")
                    {
                        <img src="~/Images/Project/projectarchive.png" width="22" height="22" onclick="@("window.location.href='" + @Url.Action("GetProjectsListByName", "Projects", new { name = ViewData["name"] as string }) + "'");" />
                    }
                    else
                    {
                        <img src="~/Images/Project/projectarchive.png" width="22" height="22" />
                    }
                }
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("GetProjectList", new { page }))

<script type="text/javascript">
    var message = '@message';
    if (message)
        alert(message);
</script>  